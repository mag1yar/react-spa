{"version":3,"sources":["redux/reducers/clients.js","redux/reducers/index.js","redux/store.js","components/Header.js","components/FieldInput.js","components/Title.js","db.js","redux/actions/clients.js","pages/List.js","pages/Card.js","pages/ClientAdd.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","items","item","isLoaded","clients","state","action","type","payload","rootReducer","combineReducers","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","max","Navbar","bg","expand","className","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","requiredInput","value","undefined","requiredPhone","length","FieldInput","input","meta","touched","error","warning","props","Badge","variant","Form","Control","Title","titleElement","document","getElementsByTagName","fullTitle","this","pageTitle","siteTitle","createPortal","React","Component","defaultProps","db","localStorageDB","localStorage","isNew","createTable","commit","addClientToDB","name","surname","middlename","phone","experience","specialty","insert","changeClientInDB","ID","update","row","getAllClients","queryAll","setClients","List","dispatch","useDispatch","useSelector","updateList","useEffect","Table","striped","bordered","hover","Button","onClick","map","client","isLoading","Spinner","animation","connect","initialValues","reduxForm","enableReinitialize","onSubmitSuccess","result","values","alert","history","push","handleSubmit","submitting","onSubmit","Row","Group","Col","controlId","Label","Field","placeholder","component","validate","InputMask","mask","maskChar","disabled","console","log","App","exact","path","Card","ClientAdd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0fcf9c3.chunk.js","sourcesContent":["const initialState = {\r\n  items: [],\r\n  item: null,\r\n  isLoaded: false,\r\n};\r\n\r\nconst clients = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CLIENTS':\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        isLoaded: true,\r\n      };\r\n    case 'SET_LOADED':\r\n      return {\r\n        ...state,\r\n        isLoaded: action.payload,\r\n      };\r\n    case 'SELECT_CLIENT':\r\n      return {\r\n        ...state,\r\n        item: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clients;\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport clients from './clients';\r\n\r\nconst rootReducer = combineReducers({\r\n  clients,\r\n  form: formReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const persistedState = localStorage.getItem('redux-state')\r\n//   ? JSON.parse(localStorage.getItem('redux-state'))\r\n//   : {};\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// const store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// store.subscribe(() => {\r\n//   localStorage.setItem('redux-state', JSON.stringify(store.getState()));\r\n// });\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Navbar, Nav, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" className=\"mb-5\">\r\n      <Navbar.Brand as={Link} to=\"/\">\r\n        React SPA\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Nav>\r\n          <Nav.Link as={Link} to=\"/add\">\r\n            Добавить\r\n          </Nav.Link>\r\n        </Nav>\r\n        {/* <Form inline>\r\n          <Form.Control type=\"text\" placeholder=\"ID, Имя\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-primary\">Найти</Button>\r\n        </Form> */}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Form, Badge } from 'react-bootstrap';\r\n\r\nconst requiredInput = (value) => (value ? undefined : 'Это поле обязательное!');\r\nconst maxLength = (max) => (value) =>\r\n  value && value.length === max ? undefined : 'Это поле должно быть заполнено!';\r\nconst requiredPhone = maxLength(18);\r\n\r\nconst FieldInput = ({ input, meta: { touched, error, warning }, ...props }) => {\r\n  return (\r\n    <>\r\n      <Badge variant=\"danger\">\r\n        {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n      </Badge>\r\n      <Form.Control {...props} {...input} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FieldInput;\r\nexport { requiredInput, requiredPhone };\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport default class Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElement = document.getElementsByTagName('title')[0];\r\n  }\r\n\r\n  render() {\r\n    let fullTitle;\r\n    if (this.props.pageTitle) fullTitle = this.props.pageTitle + ' | ' + this.props.siteTitle;\r\n    else fullTitle = this.props.siteTitle;\r\n    return createPortal(fullTitle || '', this.titleElement);\r\n  }\r\n}\r\n\r\nTitle.defaultProps = {\r\n  pageTitle: null,\r\n  siteTitle: 'React SPA',\r\n};\r\n","import localStorageDB from 'localstoragedb';\r\n\r\n// Если БД не существует, создаётся.\r\nlet db = localStorageDB('datebase', localStorage);\r\nwindow.db = db;\r\n// Проверка, если БД только создался, создать таблицу\r\nif (db.isNew()) {\r\n  db.createTable('clients', ['name', 'surname', 'middlename', 'phone', 'experience', 'specialty']);\r\n\r\n  db.commit();\r\n}\r\n\r\nconst addClientToDB = ({ name, surname, middlename, phone, experience, specialty }) => {\r\n  db.insert('clients', { name, surname, middlename, phone, experience, specialty });\r\n  db.commit();\r\n};\r\nconst changeClientInDB = ({ ID, name, surname, middlename, phone, experience, specialty }) => {\r\n  db.update('clients', { ID }, (row) => {\r\n    row.name = name;\r\n    row.surname = surname;\r\n    row.middlename = middlename;\r\n    row.phone = phone;\r\n    row.experience = experience;\r\n    row.specialty = specialty;\r\n    return row;\r\n  });\r\n};\r\n\r\nconst getClientFromDB = (ID) => {\r\n  return db.queryAll('clients', {\r\n    query: { ID },\r\n  });\r\n};\r\n\r\nconst getAllClients = () => {\r\n  return db.queryAll('clients');\r\n};\r\n\r\nconst removeClientFromDB = (ID) => {\r\n  db.deleteRows('clients', { ID });\r\n  db.commit();\r\n};\r\n\r\nconst clearDB = () => {\r\n  db.deleteRows('clients');\r\n  db.commit();\r\n};\r\n\r\nexport {\r\n  db,\r\n  addClientToDB,\r\n  getClientFromDB,\r\n  getAllClients,\r\n  removeClientFromDB,\r\n  clearDB,\r\n  changeClientInDB,\r\n};\r\n","import { getAllClients } from '../../db';\r\n\r\nexport const setLoaded = (payload) => ({\r\n  type: 'SET_LOADED',\r\n  payload,\r\n});\r\n\r\nexport const fetchClients = () => (dispatch) => {\r\n  dispatch(setLoaded(false));\r\n  dispatch(setClients(getAllClients()));\r\n};\r\n\r\nexport const setClients = (items) => ({\r\n  type: 'SET_CLIENTS',\r\n  payload: items,\r\n});\r\n\r\nexport const selectClient = (item) => ({\r\n  type: 'SELECT_CLIENT',\r\n  payload: item,\r\n});\r\n","import React from 'react';\r\nimport { Table, Button, Spinner } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchClients, selectClient } from '../redux/actions/clients';\r\nimport { getAllClients, removeClientFromDB, clearDB } from '../db';\r\n\r\nfunction List() {\r\n  const dispatch = useDispatch();\r\n  const isLoaded = useSelector(({ clients }) => clients.isLoaded);\r\n  const updateList = () => {\r\n    dispatch(fetchClients());\r\n  };\r\n  React.useEffect(() => {\r\n    updateList();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Имя</th>\r\n            <th>Номер телефона</th>\r\n            <th>Карта</th>\r\n            <th>\r\n              Действия <Button onClick={(() => clearDB(), () => updateList())}>Удалить всё</Button>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoaded\r\n            ? getAllClients().map((client) => (\r\n                <tr key={client.ID} isLoading={true}>\r\n                  <td>{client.ID}</td>\r\n                  <td>{client.name}</td>\r\n                  <td>{client.phone}</td>\r\n                  <td>\r\n                    <Button onClick={() => dispatch(selectClient(client))} as={Link} to=\"/card\">\r\n                      Перейти\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <Button onClick={(() => removeClientFromDB(client.ID), () => updateList())}>\r\n                      Удалить\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : ''}\r\n        </tbody>\r\n      </Table>\r\n      {isLoaded ? (\r\n        ''\r\n      ) : (\r\n        <div className=\"loader\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport InputMask from 'react-input-mask';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { FieldInput, Title } from '../components';\r\nimport { requiredInput, requiredPhone } from '../components/FieldInput';\r\nimport { changeClientInDB } from '../db';\r\n\r\nfunction Card(props) {\r\n  const { handleSubmit, submitting } = props;\r\n  return (\r\n    <>\r\n      <Title pageTitle=\"Карта клиента\" />\r\n      <Form onSubmit={handleSubmit(changeClientInDB)}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formName\">\r\n            <Form.Label>Имя</Form.Label>\r\n            <Field\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Имя\"\r\n              component={FieldInput}\r\n              validate={[requiredInput]}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formSurname\">\r\n            <Form.Label>Фамилия</Form.Label>\r\n            <Field\r\n              name=\"surname\"\r\n              component={FieldInput}\r\n              type=\"text\"\r\n              placeholder=\"Фамилия\"\r\n              validate={[requiredInput]}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formMiddleName\">\r\n            <Form.Label>Отчество</Form.Label>\r\n            <Field name=\"middlename\" type=\"text\" placeholder=\"Отчество\" component={FieldInput} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"formPhone\">\r\n          <Form.Label>Номер телефона</Form.Label>\r\n          <Field\r\n            as={InputMask}\r\n            mask=\"+7 (999) 999 99 99\"\r\n            maskChar={null}\r\n            name=\"phone\"\r\n            type=\"text\"\r\n            validate={[requiredPhone]}\r\n            placeholder=\"\"\r\n            component={FieldInput}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formExperience\">\r\n          <Form.Label>Стаж работы</Form.Label>\r\n          <Field name=\"experience\" type=\"number\" component={FieldInput} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formSpecialty\">\r\n          <Form.Label>Специальность</Form.Label>\r\n          <Field name=\"specialty\" type=\"text\" component={FieldInput} />\r\n        </Form.Group>\r\n        <Button disabled={submitting} variant=\"primary\" type=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  initialValues: state.clients.item,\r\n});\r\nexport default connect(mapStateToProps)(\r\n  reduxForm({\r\n    form: 'changeClientForm',\r\n    enableReinitialize: true,\r\n    onSubmitSuccess: (result, dispatch, props) => {\r\n      const name = props.values.name;\r\n      const surname = props.values.surname;\r\n      alert(`Клиент «${name} ${surname}» сохранен!`);\r\n      props.history.push('/');\r\n    },\r\n  })(Card),\r\n);\r\n// export default reduxForm({\r\n//   form: 'changeClientForm',\r\n// })(Card);\r\n","import React from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport InputMask from 'react-input-mask';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { FieldInput, Title } from '../components';\r\nimport { requiredInput, requiredPhone } from '../components/FieldInput';\r\n\r\nimport { addClientToDB } from '../db';\r\n\r\nfunction Card(props) {\r\n  const { handleSubmit } = props;\r\n\r\n  return (\r\n    <>\r\n      <Title pageTitle=\"Добавить клиента\" />\r\n      <Form onSubmit={handleSubmit(addClientToDB)}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formName\">\r\n            <Form.Label>Имя</Form.Label>\r\n            <Field\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Имя\"\r\n              component={FieldInput}\r\n              validate={[requiredInput]}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formSurname\">\r\n            <Form.Label>Фамилия</Form.Label>\r\n            <Field\r\n              name=\"surname\"\r\n              component={FieldInput}\r\n              type=\"text\"\r\n              placeholder=\"Фамилия\"\r\n              validate={[requiredInput]}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formMiddlename\">\r\n            <Form.Label>Отчество</Form.Label>\r\n            <Field name=\"middlename\" type=\"text\" placeholder=\"Отчество\" component={FieldInput} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"formPhone\">\r\n          <Form.Label>Номер телефона</Form.Label>\r\n          <Field\r\n            as={InputMask}\r\n            mask=\"+7 (999) 999 99 99\"\r\n            maskChar={null}\r\n            name=\"phone\"\r\n            type=\"text\"\r\n            placeholder=\"Номер телефона\"\r\n            component={FieldInput}\r\n            validate={[requiredPhone]}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formExperience\">\r\n          <Form.Label>Стаж работы</Form.Label>\r\n          <Field name=\"experience\" type=\"number\" component={FieldInput} placeholder=\"Стаж работы\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formSpecialty\">\r\n          <Form.Label>Специальность</Form.Label>\r\n          <Field name=\"specialty\" type=\"text\" component={FieldInput} placeholder=\"Специальность\" />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Добавить\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'addClientForm',\r\n  onSubmitSuccess: (result, dispatch, props) => {\r\n    console.log(props);\r\n    const name = props.values.name;\r\n    const surname = props.values.surname;\r\n    alert(`Клиент «${name} ${surname}» добавлен!`);\r\n    props.history.push('/');\r\n  },\r\n})(Card);\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Header } from './components';\nimport { Card, List, ClientAdd } from './pages';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Route exact path=\"/\" component={List} />\n        <Route exact path=\"/card\" component={Card} />\n        <Route exact path=\"/add\" component={ClientAdd} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}